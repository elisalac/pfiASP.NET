@model IEnumerable<ChatManager.Models.User>

@{
    ViewBag.Title = "Index";
    var linkUrl = Url.Action("Chats", "Chat");
    var user = ChatManager.Models.OnlineUsers.GetSessionUser();
}
<div class="container body-content">
    <div style="display:grid; grid-template-columns: 65px auto; align-items:center">
        @if (user.IsAdmin)
        {
            <a href="@linkUrl" data-toggle="tooltip" title="Conversations">
                <img src="../favicon.png" style="width:56px">
            </a>
        }
        else
        {
            <img src="../favicon.png" style="width:56px">
        }
        <h3>Salle de discussions</h3>

    </div>
    <hr />
    <div class="main">
        <div style="display:grid; grid-template-columns:60px auto; column-gap:10px;">
            <div class="friendsListContainer" id="friendsListContainer" title="Cliquez sur un de vos amis pour clavarder avec lui..."> </div>
            <div>
                <div class="messagesPanel" id="messagesPanel" title="Cliquez sur un de vos messages pour l'éditer..."></div>
                <div class="sendMessageLayout">
                    <input id="message" class="form-control" style="width:100% !important; max-width:1000px !important;" placeholder="Tapez votre message ici ..." title="Les urls d'image sont prises en compte." />
                    <span id="send" class="icon fa fa-paper-plane" title="Envoyer" data-placement="bottom"> </span>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script defer>
        let friendsPanelUpdater = new PartialRefresh("/Chat/GetFriendsList", "friendsListContainer", 5, UpdateFriendsCallback);
        let messagesPanelUpdater = new PartialRefresh("/Chat/GetMessages", "messagesPanel", 5, UpdateMessagesCallback);

        function UpdateFriendsCallback() {
            messagesPanelUpdater.refresh(true);
            $(".unselectedTarget").click(function () {
                var userId = $(this).attr("userid");
                ajaxActionCall("/Chat/SetCurrentTarget/" + userId, () => { friendsPanelUpdater.refresh(true); messagesPanelUpdater.refresh(true); });
            })
        }
        let editing = false;
        let targetTyping = false;

        function setEditing(value) {
            editing = value;
            if (editing)
                messagesPanelUpdater.pause();
            else
                messagesPanelUpdater.restart();
        }
        function sendMessage() {
            var message = $('#message').val();
            $('#message').val("");
            if (message != "") {
                messagesPanelUpdater.command("/Chat/Send?message=" + message, UpdateMessagesCallback);
            }
        }
        $('#message').keypress(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                sendMessage();
            }
        });
        /*$('#message').focus(function (event) {
            ajaxActionCall("/chat/IsTyping");
            console.log("focus")
        });
        $('#message').blur(function (event) {
            ajaxActionCall("/chat/StopTyping");
            console.log("blur")
        });*/
        $(document).on('keyup', function (event) {
            if (event.key == "Escape") {
                $("#message").val("");
            }
        });

        function UpdateMessagesCallback() {
            $("#typing").hide();
            $(".editMessage").hide();
            $("#messagesPanel").scrollTop($("#messagesPanel")[0].scrollHeight + 100);

            $(".contentImage").click(function (event) {
                event.stopPropagation();
            })
            $("a").click(function (event) {
                event.stopPropagation();
            })
            $(".sent").click(function () {
                if (!editing) {
                    setEditing(true);
                    var message_id = $(this).attr("id").split("_")[1];
                    $("#edit_" + message_id).show();
                    $("#sent_" + message_id).hide();
                    $("#delete_" + message_id).click(function () {
                        setEditing(false);
                        messagesPanelUpdater.confirmedCommand("Effacer ce message", "/Chat/Delete/" + message_id);
                    })
                    $("#update_" + message_id).click(function () {
                        setEditing(false);
                        var message = $("#" + message_id).val();
                        messagesPanelUpdater.command("/Chat/Update?id=" + message_id + "&message=" + message);
                    })
                    $('#' + message_id).keypress(function (event) {
                        var keycode = (event.keyCode ? event.keyCode : event.which);
                        if (keycode == '13') {
                            setEditing(false);
                            var message = $("#" + message_id).val();
                            messagesPanelUpdater.command("/Chat/Update?id=" + message_id + "&message=" + message);
                        }
                    });
                    $(document).on('keyup', function (event) {
                        if (event.key == "Escape") {
                            $("#edit_" + message_id).hide();
                            $("#sent_" + message_id).show();
                            setEditing(false);
                        }
                    });
                }
            });
        }

        /*setInterval(() => { ajaxActionCall("/Chat/IsTargetTyping", UpdateTyping); }, 3000);

        function UpdateTyping(show) {
            if (show)
                $("#typing").show();
            else
                $("#typing").hide();
        }*/

        $("#send").click(function () {
            sendMessage();
        })
    </script>
}

